// PostgreSQL Schema
model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  password         String
  name             String
  role             Role     @default(USER)
  restaurantsOwned Int[] // IDs of restaurants owned by the user
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

enum Role {
  USER
  OWNER
  ADMIN
}

// MongoDB Schemas
model Restaurant {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  location  Location
  cuisine   String[]
  hours     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type Location {
  address   String
  city      String
  latitude  Float
  longitude Float
}

model Menu {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  restaurantId String @db.ObjectId
  name         String
  price        Float
}

model Review {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  restaurantId String   @db.ObjectId
  userId       Int
  rating       Int // Scale of 1-5
  comment      String
  createdAt    DateTime @default(now())
}

model Reservation {
  id           String            @id @default(auto()) @map("_id") @db.ObjectId
  restaurantId String            @db.ObjectId
  userId       Int
  date         DateTime
  slot         String // E.g., "18:00-20:00"
  status       ReservationStatus @default(PENDING)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

enum ReservationStatus {
  PENDING
  APPROVED
  REJECTED
}
